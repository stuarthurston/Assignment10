<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_45) on Mon Apr 28 22:41:52 EDT 2014 -->
<meta http-equiv="Content-Type" content="text/html" charset="UTF-8">
<title>Player</title>
<meta name="date" content="2014-04-28">
<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Player";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<h2 title="Class Player" class="title">Class Player</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>Player</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">Player</span>
extends <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></pre>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>(package private) Deck</code></td>
<td class="colLast"><code><strong><a href="Player.html#playDeck">playDeck</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>(package private) Deck</code></td>
<td class="colLast"><code><strong><a href="Player.html#returnDeck">returnDeck</a></strong></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="Player.html#Player()">Player</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="Player.html#addPlay(Card)">addPlay</a></strong>(Card&nbsp;inCard)</code>
<div class="block">Add a card to the playDeck - the active deck</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="Player.html#addReturn(Card)">addReturn</a></strong>(Card&nbsp;inCard)</code>
<div class="block">Add a card to the addReturn - the won deck</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="Player.html#flip()">flip</a></strong>()</code>
<div class="block">Get the top card off of the deck and remove from the deck</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="Player.html#getPlayDeck()">getPlayDeck</a></strong>()</code>
<div class="block">Get the the size of the active (play) deck, return an int</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="Player.html#getReturnDeck()">getReturnDeck</a></strong>()</code>
<div class="block">Get the the size of the return deck, return an int</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="Player.html#getTopCard()">getTopCard</a></strong>()</code>
<div class="block">Get the top card off of the deck and remove from the deck</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="Player.html#moveCards()">moveCards</a></strong>()</code>
<div class="block">Move cards from the return deck to the playdeck.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="Player.html#totalCards()">totalCards</a></strong>()</code>
<div class="block">Get the amount of cards in both the return and play deck</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="playDeck">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>playDeck</h4>
<pre>Deck playDeck</pre>
</li>
</ul>
<a name="returnDeck">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>returnDeck</h4>
<pre>Deck returnDeck</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Player()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Player</h4>
<pre>public&nbsp;Player()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="addPlay(Card)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addPlay</h4>
<pre>public&nbsp;void&nbsp;addPlay(Card&nbsp;inCard)</pre>
<div class="block">Add a card to the playDeck - the active deck</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>inCard</code> - a Card object</dd></dl>
</li>
</ul>
<a name="addReturn(Card)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addReturn</h4>
<pre>public&nbsp;void&nbsp;addReturn(Card&nbsp;inCard)</pre>
<div class="block">Add a card to the addReturn - the won deck</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>inCard</code> - a Card object</dd></dl>
</li>
</ul>
<a name="flip()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>flip</h4>
<pre>public&nbsp;Card&nbsp;flip()</pre>
<div class="block">Get the top card off of the deck and remove from the deck</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>Card topCard a Card object</dd></dl>
</li>
</ul>
<a name="getTopCard()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTopCard</h4>
<pre>public&nbsp;Card&nbsp;getTopCard()</pre>
<div class="block">Get the top card off of the deck and remove from the deck</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>Card topCard a Card object</dd></dl>
</li>
</ul>
<a name="getPlayDeck()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPlayDeck</h4>
<pre>public&nbsp;int&nbsp;getPlayDeck()</pre>
<div class="block">Get the the size of the active (play) deck, return an int</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>int playDeck.size() The size of the active deck</dd></dl>
</li>
</ul>
<a name="getReturnDeck()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getReturnDeck</h4>
<pre>public&nbsp;int&nbsp;getReturnDeck()</pre>
<div class="block">Get the the size of the return deck, return an int</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>int returnDeck.size() The size of the return deck</dd></dl>
</li>
</ul>
<a name="totalCards()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>totalCards</h4>
<pre>public&nbsp;int&nbsp;totalCards()</pre>
<div class="block">Get the amount of cards in both the return and play deck</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>int totalCount The amount of cards a player has</dd></dl>
</li>
</ul>
<a name="moveCards()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>moveCards</h4>
<pre>public&nbsp;void&nbsp;moveCards()</pre>
<div class="block">Move cards from the return deck to the playdeck.
      Shuffle the cards, move, and then clear the return deck</div>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
</body>
</html>
